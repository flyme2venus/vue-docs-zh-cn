name: Development Build

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'src/**'
      - '.vitepress/**'
      - 'src-tauri/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - '.vitepress/**'
      - 'src-tauri/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

env:
  CARGO_TERM_COLOR: always

jobs:
  # 快速验证构建 - 仅检查前端构建
  quick-check:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9

    - name: Install dependencies
      run: pnpm install

    - name: Type check
      run: pnpm type
      continue-on-error: true

    - name: Lint markdown
      run: pnpm lint
      continue-on-error: true

    - name: Build frontend
      run: pnpm build

    - name: Verify build output
      run: |
        test -d .vitepress/dist || (echo "Build failed - dist directory not found" && exit 1)
        echo "Frontend build verification passed"

  # Windows 桌面应用构建
  build-sample:
    runs-on: windows-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: quick-check
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'

    - name: Install dependencies
      run: pnpm install

    - name: Build frontend
      run: pnpm build

    - name: Build Windows app (development)
      run: |
        # 先尝试构建不打包的版本，如果成功再尝试打包
        echo "Building executable only..."
        pnpm tauri build --target x86_64-pc-windows-msvc --no-bundle
        
        echo "Building with NSIS bundle..."
        pnpm tauri build --target x86_64-pc-windows-msvc --bundles nsis
      continue-on-error: true

    - name: Upload development build
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: windows-dev-build-${{ github.sha }}
        path: |
          src-tauri/target/x86_64-pc-windows-msvc/release/bundle/**/*
          src-tauri/target/x86_64-pc-windows-msvc/release/vue-docs-zh-cn.exe
        retention-days: 7
