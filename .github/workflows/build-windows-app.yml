# .github/workflows/release.yml

name: Build Windows Desktop App

# 触发器：当有代码推送到 main 分支时，或手动触发时运行
on:
  push:
    branches: [ "main", "master" ] # 根据你的主分支名修改
  workflow_dispatch: # 允许手动从 Actions 页面触发

jobs:
  build-tauri:
    # 策略：不因其他 job 失败而取消，超时设置为 60 分钟
    strategy:
      fail-fast: false
      
    # 运行环境：必须使用 Windows Runner
    runs-on: windows-latest

    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 安装 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # 3. 设置 pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8 # 或者你使用的 pnpm 版本

      # 4. 安装前端依赖
      - name: Install frontend dependencies
        run: pnpm install

      # 5. 构建前端应用
      # 这一步会编译你的 VitePress 代码，并将产物输出到 .vitepress/dist 目录
      - name: Build frontend application
        run: pnpm build

      # 6. 【最终修正】复制构建产物到 Tauri 内部
      # 这是为了彻底解决 tauri-action 在 Windows CI 中的路径解析问题。
      # 我们将前端产物复制到 src-tauri/dist 目录中。
      - name: Copy build output to inside src-tauri
        run: |
          echo "--- Copying from ./.vitepress/dist to ./src-tauri/dist ---"
          # 创建目标目录
          New-Item -ItemType Directory -Force -Path ./src-tauri/dist
          # 复制内容
          Copy-Item -Path ./.vitepress/dist/* -Destination ./src-tauri/dist -Recurse -Force
          echo "--- Verifying copied files in ./src-tauri/dist ---"
          Get-ChildItem -Path ./src-tauri/dist -Recurse
          echo "----------------------------------------------------"
        shell: pwsh

      # 7. 使用官方 Action 构建 Tauri 应用
      - name: Build Tauri application
        uses: tauri-apps/tauri-action@v0
        env:
          # GITHUB_TOKEN 是自动可用的，用于和 GitHub API 交互
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # `tauri-action` 将会使用 tauri.conf.json 中的配置
          # 请确保已将 tauri.conf.json 中的 `distDir` 修改为 "dist"
          args: --verbose

      # 8. 上传构建产物
      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: VueDocs-Windows-Installer
          # 路径通配符可以匹配版本号不确定的文件名
          path: src-tauri/target/release/bundle/msi/*.msi
